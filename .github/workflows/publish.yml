# Modified from https://github.com/nanoporetech/fast-ctc-decode
name: publish-pyccs

on:
  push:
    tags:
      - 'v[0-9]+.*' # Push events to matching v*, i.e. v1.0, v20.15.10

env:
  CARGO_TERM_COLOR: always

jobs:

  linux-wheels:
    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux1_x86_64
    steps:
     - uses: actions/checkout@v1
     - name: Build wheels
       run: |
         curl https://sh.rustup.rs -sSf | sh -s -- -y
         source $HOME/.cargo/env
         rustup default nightly-2019-12-11
         bash .github/workflows/build-wheels.sh
     - uses: actions/upload-artifact@v1
       with:
         name: linux-wheels
         path: wheelhouse/

  # osx-wheels:
  #   runs-on: macos-latest
  #   strategy:
  #     matrix:
  #       python-version: [3.5, 3.6, 3.7, 3.8, 3.9, 3.10]
  #   steps:
  #    - uses: actions/checkout@v1
  #    - uses: actions-rs/toolchain@v1
  #      with:
  #        toolchain: nightly
  #        default: true
  #    - uses: actions/setup-python@v2
  #      with:
  #        python-version: ${{ matrix.python-version }}
  #    - name: Build wheels
  #      run: |
  #        python3 -m pip install maturin
  #        maturin build --release
  #    - uses: actions/upload-artifact@v1
  #      with:
  #        name: osx-${{ matrix.python-version }}-wheel
  #        path: target/wheels

  # windows-wheels:
  #   runs-on: windows-latest
  #   steps:
  #    - uses: actions/checkout@v1
  #    - uses: actions-rs/toolchain@v1
  #      with:
  #        toolchain: nightly
  #        default: true
  #    - uses: actions/setup-python@v2
  #    - name: Build wheels
  #      run: |
  #        python -m pip install maturin
  #        maturin build --release
  #    - uses: actions/upload-artifact@v1
  #      with:
  #        name: windows-wheels
  #        path: target/wheels

  initial_release:
    name: Create base release
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false

  release_assets:
    name: Release assets
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          # Linux
          - {os: ubuntu-16.04, toolchain: stable, target: x86_64-unknown-linux-gnu, target_cpu: generic, cross: false}
          # - {os: ubuntu-16.04, toolchain: stable, target: x86_64-unknown-linux-gnu, target_cpu: broadwell, cross: false}
          # - {os: ubuntu-latest, toolchain: stable, target: aarch64-unknown-linux-gnu, target_cpu: generic, cross: true}
          # - {os: ubuntu-latest, toolchain: stable, target: arm-unknown-linux-gnueabi, target_cpu: generic, cross: true}
          # - {os: ubuntu-latest, toolchain: stable, target: armv7-unknown-linux-gnueabihf, target_cpu: generic, cross: true}
          # mips and powerpc are not compitble with ring v0.16.10, so they are disabled for now
          # - {os: ubuntu-latest, target: mips64el-unknown-linux-gnuabi64, cross: true}
          # - {os: ubuntu-latest, target: powerpc64le-unknown-linux-gnu, cross: true}
          # - {os: ubuntu-latest, toolchain: stable,  target: x86_64-unknown-linux-musl, target_cpu: generic, cross: true}
          # - {os: ubuntu-latest, toolchain: stable,  target: x86_64-unknown-linux-musl, target_cpu: broadwell, cross: true}
          # - {os: ubuntu-latest, toolchain: stable, target: aarch64-linux-android, target_cpu: generic, cross: true}
          # Macos
          # - {os: macos-10.15, toolchain: stable, target: x86_64-apple-darwin, target_cpu: generic, cross: false}
          # - {os: macos-10.15, toolchain: stable, target: x86_64-apple-darwin, target_cpu: broadwell, cross: false}
          # Windows
          # - {os: windows-latest, toolchain: stable-x86_64-pc-windows-gnu, target: x86_64-pc-windows-gnu, target_cpu: generic, cross: false}
          # - {os: windows-latest, toolchain: stable-x86_64-pc-windows-msvc, target: x86_64-pc-windows-msvc, target_cpu: generic, cross: false}
          # - {os: windows-latest, toolchain: stable-x86_64-pc-windows-gnu, target: x86_64-pc-windows-gnu, target_cpu: broadwell, cross: false}
          # - {os: windows-latest, toolchain: stable-x86_64-pc-windows-msvc, target: x86_64-pc-windows-msvc, target_cpu: broadwell, cross: false}
    steps:
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.config.toolchain }}
          target: ${{ matrix.config.target }}
          override: true
          default: true

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Build
        run: maturin build --release -b bin

      - name: Get tag version
        id: get_version
        run: echo ::set-output name=VERSION::``${GITHUB_REF#refs/tags/}``
        shell: bash

      - name: Pack binaries if unix
        if: matrix.config.os != 'windows-latest'
        run: mv ./target/release/ccs ./target/release/ccs_${{ steps.get_version.outputs.VERSION }}_${{ matrix.config.target }}_${{ matrix.config.target_cpu }}

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./target/release/ccs_${{ steps.get_version.outputs.VERSION }}_${{ matrix.config.target }}_${{ matrix.config.target_cpu }}
          asset_name: ccs_${{ steps.get_version.outputs.VERSION }}_${{ matrix.config.target }}_${{ matrix.config.target_cpu }}
          tag: ${{ github.ref }}
          body: "Update ${{ steps.get_version.outputs.VERSION }}"
          file_glob: true
          overwrite: true